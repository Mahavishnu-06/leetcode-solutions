class Solution {
    public String largestGoodInteger(String s) {
        char[] ch = s.toCharArray();
        int maxNum = -1;
        String maxStr = "";
        
        for (int i = 0; i < ch.length - 2; i++) {
            if (ch[i] == ch[i+1] && ch[i+1] == ch[i+2]) {
                int a = ch[i] - '0';
                int b = ch[i+1] - '0';
                int c = ch[i+2] - '0';
                int sum = (a * 100) + (b * 10) + c;
                
                if (sum > maxNum) {
                    maxNum = sum;
                    maxStr = "" + ch[i] + ch[i+1] + ch[i+2];
                }
            }
        }
        
        return maxStr;
    }
}

// class Solution {
//     public String largestGoodInteger(String s) {
//         String max = "";
//         for (int i = 0; i < s.length() - 2; i++) {
//             if (s.charAt(i) == s.charAt(i+1) && s.charAt(i+1) == s.charAt(i+2)) {
//                 String triplet = s.substring(i, i + 3);
//                 if (triplet.compareTo(max) > 0) {
//                     max = triplet;
//                 }
//             }
//         }
//         return max;
//     }
// }
